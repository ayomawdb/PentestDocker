FROM ubuntu:14.04

MAINTAINER "Ayoma Gayan Wijethunga" <ayomawdb at gmail.com>

# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -sf /bin/true /sbin/initctl

# Let the conatiner know that there is no tty
ENV DEBIAN_FRONTEND noninteractive

# Update and install some useful apts
RUN apt-get update

# Avoid ERROR: invoke-rc.d: policy-rc.d denied execution of start.
RUN echo "#!/bin/bash\nexit 0" > /usr/sbin/policy-rc.d

RUN apt-get upgrade -y

# General build instructions
RUN apt-get -y install curl
RUN apt-get -y install git

###########################
#  Installing Metasploit  #
###########################

# Install Dependencies
RUN sudo apt-get -y install \
  autoconf \
  bison \
  build-essential \
  curl \
  git-core \
  libapr1 \
  libaprutil1 \
  libcurl4-openssl-dev \
  libgmp3-dev \
  libpcap-dev \
  libpq-dev \
  libreadline6-dev \
  libsqlite3-dev \
  libssl-dev \
  libsvn1 \
  libtool \
  libxml2 \
  libxml2-dev \
  libxslt-dev \
  libyaml-dev \
  locate \
  ncurses-dev \
  openssl \
  postgresql \
  postgresql-contrib \
  wget \
  xsel \
  zlib1g \
  zlib1g-dev

# Close from GitHub (Master!)
RUN git clone https://github.com/rapid7/metasploit-framework.git ~/metasploit-framework

# Install RVM
RUN curl -sSL https://rvm.io/mpapis.asc | gpg --import -
RUN curl -L https://get.rvm.io | bash -s stable
RUN echo 'source /etc/profile.d/rvm.sh' >> ~/.bashrc
RUN /bin/bash -l -c "rvm requirements"
RUN /bin/bash -l -c "rvm install $(cat ~/metasploit-framework/.ruby-version)"

# Configuring Gnome Terminal (N/A)
# RUN gconftool-2 --set --type boolean /apps/gnome-terminal/profiles/Default/login_shell true

# Install Bundle Gem
RUN cd ~/metasploit-framework
RUN /bin/bash -l -c "cd ~/metasploit-framework && gem install bundler"
RUN /bin/bash -l -c "cd ~/metasploit-framework && bundle install"

# Run the rest of the commands as the ``postgres`` user
USER postgres

# Create a PostgreSQL role named ``msfdev`` with ``msfdev`` as the password and
# then create a database `msfdev` owned by the ``msfdev`` role.
RUN service postgresql start && sleep 10 && psql --command "CREATE USER msfdev WITH SUPERUSER PASSWORD 'msfdev';" &&\
    createdb --owner msfdev msf_dev_db

RUN service postgresql start && sleep 10 && createdb --owner msfdev msf_test_db

# Run the rest of the commands as the ``root`` user
USER root

RUN mkdir ~/.msf4

RUN echo '# Development Database' >> ~/.msf4/database.yml << EOL
RUN echo 'development: &pgsql' >> ~/.msf4/database.yml << EOL
RUN echo '  adapter: postgresql' >> ~/.msf4/database.yml << EOL
RUN echo '  database: msf_dev_db' >> ~/.msf4/database.yml << EOL
RUN echo '  username: msfdev' >> ~/.msf4/database.yml << EOL
RUN echo '  password: msfdev' >> ~/.msf4/database.yml << EOL
RUN echo '  host: localhost' >> ~/.msf4/database.yml << EOL
RUN echo '  port: 5432' >> ~/.msf4/database.yml << EOL
RUN echo '  pool: 5' >> ~/.msf4/database.yml << EOL
RUN echo '  timeout: 5' >> ~/.msf4/database.yml << EOL
RUN echo '' >> ~/.msf4/database.yml << EOL
RUN echo '# Production database -- same as dev' >> ~/.msf4/database.yml << EOL
RUN echo 'production: &production' >> ~/.msf4/database.yml << EOL
RUN echo '  <<: *pgsql' >> ~/.msf4/database.yml << EOL
RUN echo '' >> ~/.msf4/database.yml << EOL
RUN echo '# Test database -- not the same, since it gets dropped all the time' >> ~/.msf4/database.yml << EOL
RUN echo 'test:' >> ~/.msf4/database.yml << EOL
RUN echo '  <<: *pgsql' >> ~/.msf4/database.yml << EOL
RUN echo '  database: msf_test_db' >> ~/.msf4/database.yml << EOL

# Update Metasploit
RUN /bin/bash -l -c "cd ~/metasploit-framework && ./msfupdate"


###########################
#          SQLMap         #
###########################

RUN apt-get install -y python
RUN git clone https://github.com/sqlmapproject/sqlmap.git ~/sqlmap

###########################
#           NMap          #
###########################

RUN apt-get install -y build-essential checkinstall libpcre3-dev liblua5.2-dev
RUN git clone https://github.com/nmap/nmap.git ~/nmap
RUN cd ~/nmap && ./configure && make

###########################
#         DNSRecon        #
###########################

RUN sudo apt-get install -y python-netaddr python-dnspython
RUN git clone https://github.com/darkoperator/dnsrecon.git ~/dnsrecon

###########################
#       theHarvester      #
###########################

RUN apt-get install -y python-requests
RUN git clone https://github.com/laramies/theHarvester.git ~/theHarvester
RUN chmod +x ~/theHarvester/theHarvester.py

###########################
#        Bettercap        #
###########################

RUN apt-get install -y build-essential ruby-dev libpcap-dev
RUN git clone https://github.com/evilsocket/bettercap.git ~/bettercap
RUN cd ~/bettercap && gem build bettercap.gemspec

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


CMD service postgresql start && bash
